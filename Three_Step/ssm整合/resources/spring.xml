<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启包扫描，只处理service和dao。不扫描controller包下的文件-->
    <context:component-scan base-package="com.javasm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--配置和mybatis的整合-->
    <!--配置连接池-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="initialSize" value="${jdbc.initSize}"></property>
    </bean>
    <!--配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--配置参数合理化-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--分页参数合理化，如果大于最后一页则返回最后一页的数据
                        如果查询的是第0或者负的，则返回第一页的数据-->
                        <value>reasonable=true</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!--配置接口所在的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.javasm.*.dao"></property>
    </bean>
    <!--配置Spring框架的声明式事务管理-->
    <!--配置事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务注解的识别-->
    <tx:annotation-driven></tx:annotation-driven>
    <!--配置式（显式　）事务的通知-->
    <!--<tx:advice id="txAdvice">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="add*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="insert*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="save*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED"  rollback-for="java.lang.Exception"></tx:method>-->
            <!--<tx:method name="edit*" propagation="REQUIRED"  rollback-for="java.lang.Exception"></tx:method>-->
            <!--<tx:method name="del*" propagation="REQUIRED"  rollback-for="java.lang.Exception"></tx:method>-->
            <!--<tx:method name="select*" propagation="SUPPORTS"  rollback-for="java.lang.Exception"></tx:method>-->
            <!--<tx:method name="query*" propagation="SUPPORTS"  rollback-for="java.lang.Exception"></tx:method>-->
            <!--<tx:method name="get*" propagation="SUPPORTS"  rollback-for="java.lang.Exception"></tx:method>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash;配置AOP的增强&ndash;&gt;-->
    <!--&lt;!&ndash;把txAdvice事务通知织入到servicePointcut切入点&ndash;&gt;-->
    <!--&lt;!&ndash;返回值，包名，类名，方法名，形参列表&ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="servicePointcut" expression="execution(* com.javasm.*.service.impl.*.*(..))"></aop:pointcut>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"></aop:advisor>-->
    <!--</aop:config>-->

</beans>