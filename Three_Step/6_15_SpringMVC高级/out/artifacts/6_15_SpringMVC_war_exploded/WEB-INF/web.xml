<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--执行请求过滤,拦截到请求后,去容器中获取id为corsFilter的  对象,执行真正的跨域配置-->
    <filter>
        <filter-name>myCorsFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>corsFilter</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>myCorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--判断请求方式时put,delete的话,对请求体中的数据做转换处理成Map,把参数保存request对象.-->
    <filter>
        <filter-name>formContentFilter</filter-name>
        <filter-class>org.springframework.web.filter.FormContentFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>formContentFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--编码过滤器,前端传递数据使用json格式的话,该对象没必要配置-->
    <!--<filter>-->
    <!--<filter-name>characterEncodingFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
    <!--<init-param>-->
    <!--<param-name>encoding</param-name>-->
    <!--<param-value>UTF-8</param-value>-->
    <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>characterEncodingFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--前端控制器-->
    <!--配置mvc的前端控制对象-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--<servlet-mapping>-->
    <!--<servlet-name>default</servlet-name>-->
    <!--<url-pattern>*.html</url-pattern>-->
    <!--<url-pattern>*.css</url-pattern>-->
    <!--<url-pattern>*.js</url-pattern>-->
    <!--<url-pattern>*.jpg</url-pattern>-->
    <!--<url-pattern>*.png</url-pattern>-->
    <!--</servlet-mapping>-->
</web-app>